version: '3.8'
services:
  zookeeper:
    image: confluentinc/cp-zookeeper:latest
    environment:
      - ZOOKEEPER_CLIENT_PORT=2181

  kafka:
    image: confluentinc/cp-kafka:latest
    depends_on:
      - zookeeper
    ports:
    - "9092:9092"
    environment:
      - KAFKA_ZOOKEEPER_CONNECT=zookeeper:2181
      - KAFKA_ADVERTISED_LISTENERS=PLAINTEXT://kafka:9092

  client:
    build: 
      context: ./client_service
      dockerfile: Dockerfile
    ports:
      - "3000:3000"
    restart: on-failure

  api_service:
    build: ./api_service
    ports:
      - "8080:8080"
    depends_on:
      - db
    environment:
      - PORT=${API_SERVICE_PORT}
      - KAFKA_HOST=${KAFKA_HOST}
      - STATS_HOST=${STATS_HOST}
      - AUTH_HOST=${AUTH_HOST}
      - APP_HOST=${APP_HOST}
      - GIN_MODE=${GIN_MODE}
      - JWT_SECRET=${JWT_SECRET}
      - DOMAIN=${DOMAIN}
      - COOKIE_HTTPS=${COOKIE_HTTPS}
    restart: on-failure

  auth_service:
    build: ./auth_service
    depends_on:
      - db
    environment:
      - PORT=${AUTH_PORT}
      - DB_HOST=${DB_HOST}
      - DB_USER=${DB_USER}
      - DB_PASSWORD=${DB_PASSWORD}
      - DB_NAME=${AUTH_DB_NAME}
      - DB_SSLMODE=${DB_SSLMODE}
      - JWT_SECRET=${JWT_SECRET}
    restart: on-failure

  stats_service:
    build: ./stats_service
    depends_on:
      - db
    environment:
      - PORT=${STATS_PORT}
      - KAFKA_HOST=${KAFKA_HOST}
      - DB_HOST=${DB_HOST}
      - DB_USER=${DB_USER}
      - DB_PASSWORD=${DB_PASSWORD}
      - DB_NAME=${STAT_DB_NAME}
      - DB_SSLMODE=${DB_SSLMODE}
    restart: on-failure

  app_service:
    build: ./app_service
    depends_on:
      - db
    environment:
      - PORT=${APP_PORT}
      - DB_HOST=${DB_HOST}
      - DB_USER=${DB_USER}
      - DB_PASSWORD=${DB_PASSWORD}
      - DB_NAME=${APP_DB_NAME}
      - DB_SSLMODE=${DB_SSLMODE}
    restart: on-failure
  
  mail_service:
    build: ./mail_service
    environment:
      - MAIL_LOGIN=${MAIL_LOGIN}
      - KAFKA_HOST=${KAFKA_HOST}
      - MAIL_PASSWORD=${MAIL_PASSWORD}
      - MAIL_SMTP=${MAIL_SMTP}
      - MAIL_HOST=${MAIL_HOST}
    restart: on-failure
      
  db:
    image: postgres:13-alpine
    environment:
      - POSTGRES_USER=${POSTGRES_USER}
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD}
      - POSTGRES_DB=${POSTGRES_DB}
    volumes:
      - ./deploy/init.sql:/docker-entrypoint-initdb.d/init.sql
      - pgdata:/var/lib/postgresql/data
    restart: on-failure

volumes:
  pgdata:
